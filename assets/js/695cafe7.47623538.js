/*! For license information please see 695cafe7.47623538.js.LICENSE.txt */
"use strict";(self.webpackChunkcalendar_kit_docs=self.webpackChunkcalendar_kit_docs||[]).push([[8533],{3607:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=r(412),a=r(6823);const i={sidebar_position:2},d="useHeader",s={id:"api/hooks/useHeader",title:"useHeader",description:"The useHeader hook provides access to the header-related context within the React Native Calendar Kit. It allows you to interact with and customize the calendar's header section.",source:"@site/docs/api/hooks/useHeader.md",sourceDirName:"api/hooks",slug:"/api/hooks/useHeader",permalink:"/react-native-calendar-kit/docs/api/hooks/useHeader",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"useCalendar",permalink:"/react-native-calendar-kit/docs/api/hooks/useCalendar"},next:{title:"useBody",permalink:"/react-native-calendar-kit/docs/api/hooks/useBody"}},o={},l=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"useheader",children:"useHeader"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useHeader"})," hook provides access to the header-related context within the React Native Calendar Kit. It allows you to interact with and customize the calendar's header section."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useHeader } from '@howljs/calendar-kit';\n\nfunction MyComponent() {\n    const headerContext = useHeader();\n    // Use headerContext here\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useHeader"})," hook returns an object with the following properties:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dayBarHeight"})," (number): The height of the day bar in the header."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"numberOfDays"})," (number): The number of days displayed in the calendar view."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"columnWidthAnim"})," (",(0,t.jsx)(n.code,{children:"Animated.SharedValue<number>"}),"): An animated value representing the width of each day column."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"calendarLayout"})," (object): Contains ",(0,t.jsx)(n.code,{children:"width"})," and ",(0,t.jsx)(n.code,{children:"height"})," of the calendar layout."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hourWidth"})," (number): The width of the hour column."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"minuteHeight"})," (",(0,t.jsx)(n.code,{children:"Animated.SharedValue<number>"}),"): An animated value representing the height of one minute in the calendar."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isRTL"})," (boolean): Indicates if the calendar is in right-to-left mode."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scrollByDay"})," (boolean): Indicates if the calendar scrolls by day."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"columns"})," (number): The number of columns in the calendar view."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"calendarData"})," (object): Contains calendar-related data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eventHeight"})," (",(0,t.jsx)(n.code,{children:"Animated.SharedValue<number>"}),"): An animated value representing the height of events."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isExpanded"})," (",(0,t.jsx)(n.code,{children:"Animated.SharedValue<boolean>"}),"): An animated value indicating if the header is expanded."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"allDayEventsHeight"})," (",(0,t.jsx)(n.code,{children:"Animated.SharedValue<number>"}),"): An animated value representing the height of all-day events."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"columnWidth"})," (number): The width of each day column."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"useAllDayEvent"})," (boolean): Indicates if all-day events are being used."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isShowExpandButton"})," (",(0,t.jsx)(n.code,{children:"Animated.SharedValue<boolean>"}),"): An animated value indicating if the expand button should be shown."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"collapsedItems"})," (number): The number of items to show when the header is collapsed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"headerBottomHeight"})," (number): The height of the bottom section of the header."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rightEdgeSpacing"})," (number): The spacing at the right edge of the calendar."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"overlapEventsSpacing"})," (number): The spacing between overlapping events."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"firstDay"})," (number): The first day of the week (0 for Sunday, 1 for Monday, etc.)."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { View, Text } from 'react-native';\nimport { useHeader } from '@howljs/calendar-kit';\n\nfunction HeaderInfo() {\n    const { numberOfDays, dayBarHeight, isRTL } = useHeader();\n\n    return (\n    <View>\n        <Text>Number of days: {numberOfDays}</Text>\n        <Text>Day bar height: {dayBarHeight}</Text>\n        <Text>RTL mode: {isRTL ? 'Yes' : 'No'}</Text>\n    </View>\n    );\n}\n\nexport default HeaderInfo;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This example demonstrates how to use the ",(0,t.jsx)(n.code,{children:"useHeader"})," hook to access and display some of the header-related information."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},9296:(e,n,r)=>{var t=r(9856),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),d=Object.prototype.hasOwnProperty,s=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,r){var t,i={},l=null,c=null;for(t in void 0!==r&&(l=""+r),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(c=n.ref),n)d.call(n,t)&&!o.hasOwnProperty(t)&&(i[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===i[t]&&(i[t]=n[t]);return{$$typeof:a,type:e,key:l,ref:c,props:i,_owner:s.current}}n.Fragment=i,n.jsx=l,n.jsxs=l},412:(e,n,r)=>{e.exports=r(9296)},6823:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>s});var t=r(9856);const a={},i=t.createContext(a);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);