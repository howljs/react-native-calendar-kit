"use strict";(self.webpackChunkcalendar_kit_docs=self.webpackChunkcalendar_kit_docs||[]).push([[6361],{8288:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"2.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/react-native-calendar-kit/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Guides","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"View Mode","href":"/react-native-calendar-kit/docs/guides/view-mode","docId":"guides/view-mode","unlisted":false},{"type":"link","label":"Working with Events","href":"/react-native-calendar-kit/docs/guides/events","docId":"guides/events","unlisted":false},{"type":"link","label":"Drag to Create Events","href":"/react-native-calendar-kit/docs/guides/drag-to-create","docId":"guides/drag-to-create","unlisted":false},{"type":"link","label":"Drag to Edit Events","href":"/react-native-calendar-kit/docs/guides/drag-to-edit","docId":"guides/drag-to-edit","unlisted":false},{"type":"link","label":"Drag Selected Event","href":"/react-native-calendar-kit/docs/guides/drag-selected-event","docId":"guides/drag-selected-event","unlisted":false},{"type":"link","label":"Fetch events","href":"/react-native-calendar-kit/docs/guides/fetch-events","docId":"guides/fetch-events","unlisted":false},{"type":"link","label":"Pinch to Zoom","href":"/react-native-calendar-kit/docs/guides/pinch-to-zoom","docId":"guides/pinch-to-zoom","unlisted":false},{"type":"link","label":"Unavailable Hours","href":"/react-native-calendar-kit/docs/guides/unavailable-time","docId":"guides/unavailable-time","unlisted":false},{"type":"link","label":"Locale and Date Formatting","href":"/react-native-calendar-kit/docs/guides/locale","docId":"guides/locale","unlisted":false},{"type":"link","label":"Event Overlap Handling","href":"/react-native-calendar-kit/docs/guides/overlap-handling","docId":"guides/overlap-handling","unlisted":false},{"type":"link","label":"Available methods","href":"/react-native-calendar-kit/docs/guides/methods","docId":"guides/methods","unlisted":false},{"type":"link","label":"Theme","href":"/react-native-calendar-kit/docs/guides/theme","docId":"guides/theme","unlisted":false},{"type":"link","label":"Resources Calendar","href":"/react-native-calendar-kit/docs/guides/resources","docId":"guides/resources","unlisted":false}]},{"type":"category","label":"Customization","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"CalendarBody","href":"/react-native-calendar-kit/docs/customization/CalendarBody","docId":"customization/CalendarBody","unlisted":false}]},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CalendarContainer","href":"/react-native-calendar-kit/docs/api/calendar-container","docId":"api/calendar-container","unlisted":false},{"type":"link","label":"CalendarHeader","href":"/react-native-calendar-kit/docs/api/calendar-header","docId":"api/calendar-header","unlisted":false},{"type":"link","label":"CalendarBody","href":"/react-native-calendar-kit/docs/api/calendar-body","docId":"api/calendar-body","unlisted":false},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useCalendar","href":"/react-native-calendar-kit/docs/api/hooks/useCalendar","docId":"api/hooks/useCalendar","unlisted":false},{"type":"link","label":"useHeader","href":"/react-native-calendar-kit/docs/api/hooks/useHeader","docId":"api/hooks/useHeader","unlisted":false},{"type":"link","label":"useBody","href":"/react-native-calendar-kit/docs/api/hooks/useBody","docId":"api/hooks/useBody","unlisted":false}]}]}]},"docs":{"api/calendar-body":{"id":"api/calendar-body","title":"CalendarBody","description":"The CalendarBody component is a core part of the React Native Calendar Kit. It renders the main calendar grid, including time slots, events, and various interactive elements.","sidebar":"tutorialSidebar"},"api/calendar-container":{"id":"api/calendar-container","title":"CalendarContainer","description":"The CalendarContainer component is the main wrapper for the React Native Calendar Kit. It provides the necessary context and configuration for all child components, managing the overall state and behavior of the calendar.","sidebar":"tutorialSidebar"},"api/calendar-header":{"id":"api/calendar-header","title":"CalendarHeader","description":"The CalendarHeader component is an essential part of the React Native Calendar Kit. It renders the header section of the calendar, including day names, dates, and optionally all-day events.","sidebar":"tutorialSidebar"},"api/hooks/useBody":{"id":"api/hooks/useBody","title":"useBody","description":"The useBody hook provides access to the body-related context within the React Native Calendar Kit. It allows you to interact with and customize the main body section of the calendar.","sidebar":"tutorialSidebar"},"api/hooks/useCalendar":{"id":"api/hooks/useCalendar","title":"useCalendar","description":"The useCalendar hook provides access to the main calendar context within the React Native Calendar Kit. It allows you to interact with and customize various aspects of the calendar.","sidebar":"tutorialSidebar"},"api/hooks/useHeader":{"id":"api/hooks/useHeader","title":"useHeader","description":"The useHeader hook provides access to the header-related context within the React Native Calendar Kit. It allows you to interact with and customize the calendar\'s header section.","sidebar":"tutorialSidebar"},"customization/CalendarBody":{"id":"customization/CalendarBody","title":"CalendarBody","description":"CalendarBody is a core component of the React Native Calendar Kit. It renders the main calendar grid, including time slots, events, and various interactive elements.","sidebar":"tutorialSidebar"},"guides/drag-selected-event":{"id":"guides/drag-selected-event","title":"Drag Selected Event","description":"The React Native Calendar Kit allows users to edit a selected event by dragging it to a new time or date. This guide will walk you through enabling this feature and customizing its behavior.","sidebar":"tutorialSidebar"},"guides/drag-to-create":{"id":"guides/drag-to-create","title":"Drag to Create Events","description":"The React Native Calendar Kit provides a powerful drag-and-drop feature to create new events directly on the calendar interface. This guide will walk you through enabling this feature and customizing its behavior.","sidebar":"tutorialSidebar"},"guides/drag-to-edit":{"id":"guides/drag-to-edit","title":"Drag to Edit Events","description":"The React Native Calendar Kit allows users to edit existing events by dragging them to new times or dates. This guide will walk you through enabling this feature and customizing its behavior.","sidebar":"tutorialSidebar"},"guides/events":{"id":"guides/events","title":"Working with Events","description":"React Native Calendar Kit provides powerful features for handling events in your calendar. This guide will walk you through how to add, customize, and interact with events.","sidebar":"tutorialSidebar"},"guides/fetch-events":{"id":"guides/fetch-events","title":"Fetch events","description":"Learn how to fetch new events when the date changes in your calendar application.","sidebar":"tutorialSidebar"},"guides/locale":{"id":"guides/locale","title":"Locale and Date Formatting","description":"React Native Calendar Kit provides extensive customization options for locale settings and date formatting. This guide will walk you through how to set custom locales, hour formats, date formats, and other related customizations.","sidebar":"tutorialSidebar"},"guides/methods":{"id":"guides/methods","title":"Available methods","description":"React Native Calendar Kit provides several methods that you can use to programmatically control the calendar. These methods are accessible through a ref attached to the CalendarKit component.","sidebar":"tutorialSidebar"},"guides/overlap-handling":{"id":"guides/overlap-handling","title":"Event Overlap Handling","description":"React Native Calendar Kit provides options for handling overlapping events.","sidebar":"tutorialSidebar"},"guides/pinch-to-zoom":{"id":"guides/pinch-to-zoom","title":"Pinch to Zoom","description":"React Native Calendar Kit provides a pinch-to-zoom feature that allows users to dynamically adjust the time scale of the calendar view. This feature enhances user interaction and provides a more flexible way to view and manage events.","sidebar":"tutorialSidebar"},"guides/resources":{"id":"guides/resources","title":"Resources Calendar","description":"resources","sidebar":"tutorialSidebar"},"guides/theme":{"id":"guides/theme","title":"Theme","description":"React Native Calendar Kit allows you to customize the appearance of the calendar using a theme prop. This prop accepts an object that defines various style properties for different parts of the calendar.","sidebar":"tutorialSidebar"},"guides/unavailable-time":{"id":"guides/unavailable-time","title":"Unavailable Hours","description":"React Native Calendar Kit allows you to specify certain hours as unavailable in your calendar view. This feature is useful for indicating non-working hours, lunch breaks, or any other time slots that should be visually distinguished or blocked off.","sidebar":"tutorialSidebar"},"guides/view-mode":{"id":"guides/view-mode","title":"View Mode","description":"React Native Calendar Kit offers flexibility in customizing the calendar view mode. You can adjust the number of days displayed","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Overview","sidebar":"tutorialSidebar"}}}}')}}]);