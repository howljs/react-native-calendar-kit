/*! For license information please see 3f64463a.e5e3e7ef.js.LICENSE.txt */
"use strict";(self.webpackChunkcalendar_kit_docs=self.webpackChunkcalendar_kit_docs||[]).push([[6208],{5329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(412),o=t(6823);const r={sidebar_position:6},a="Pinch to Zoom",l={id:"guides/pinch-to-zoom",title:"Pinch to Zoom",description:"React Native Calendar Kit provides a pinch-to-zoom feature that allows users to dynamically adjust the time scale of the calendar view. This feature enhances user interaction and provides a more flexible way to view and manage events.",source:"@site/docs/guides/pinch-to-zoom.md",sourceDirName:"guides",slug:"/guides/pinch-to-zoom",permalink:"/react-native-calendar-kit/docs/guides/pinch-to-zoom",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Fetch events",permalink:"/react-native-calendar-kit/docs/guides/fetch-events"},next:{title:"Unavailable Hours",permalink:"/react-native-calendar-kit/docs/guides/unavailable-time"}},s={},c=[{value:"Enabling Pinch to Zoom",id:"enabling-pinch-to-zoom",level:2},{value:"Customizing Zoom Behavior",id:"customizing-zoom-behavior",level:2},{value:"minTimeIntervalHeight",id:"mintimeintervalheight",level:3},{value:"maxTimeIntervalHeight",id:"maxtimeintervalheight",level:3},{value:"initialTimeIntervalHeight",id:"initialtimeintervalheight",level:3},{value:"Programmatic Zooming",id:"programmatic-zooming",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pinch-to-zoom",children:"Pinch to Zoom"})}),"\n",(0,i.jsx)(n.p,{children:"React Native Calendar Kit provides a pinch-to-zoom feature that allows users to dynamically adjust the time scale of the calendar view. This feature enhances user interaction and provides a more flexible way to view and manage events."}),"\n",(0,i.jsx)(n.h2,{id:"enabling-pinch-to-zoom",children:"Enabling Pinch to Zoom"}),"\n",(0,i.jsxs)(n.p,{children:["To enable the pinch-to-zoom feature, you need to set the ",(0,i.jsx)(n.code,{children:"allowPinchToZoom"})," prop to ",(0,i.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<CalendarKit\n    allowPinchToZoom={true}\n    // ... other props\n/>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"customizing-zoom-behavior",children:"Customizing Zoom Behavior"}),"\n",(0,i.jsx)(n.p,{children:"You can customize the zoom behavior by setting the following props:"}),"\n",(0,i.jsx)(n.h3,{id:"mintimeintervalheight",children:"minTimeIntervalHeight"}),"\n",(0,i.jsx)(n.p,{children:"This prop sets the minimum height (in pixels) for each time interval when zoomed out:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<CalendarKit\n    allowPinchToZoom={true}\n    minTimeIntervalHeight={30}\n    // ... other props\n/>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"maxtimeintervalheight",children:"maxTimeIntervalHeight"}),"\n",(0,i.jsx)(n.p,{children:"This prop sets the maximum height (in pixels) for each time interval when zoomed in:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<CalendarKit\n    allowPinchToZoom={true}\n    maxTimeIntervalHeight={120}\n    // ... other props\n/>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"initialtimeintervalheight",children:"initialTimeIntervalHeight"}),"\n",(0,i.jsx)(n.p,{children:"This prop sets the initial height (in pixels) for each time interval:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<CalendarKit\n    allowPinchToZoom={true}\n    initialTimeIntervalHeight={60}\n    // ... other props\n/>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"programmatic-zooming",children:"Programmatic Zooming"}),"\n",(0,i.jsxs)(n.p,{children:["You can also programmatically control the zoom level using the ",(0,i.jsx)(n.code,{children:"zoom"})," method of the CalendarKit ref:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const calendarRef = useRef(null);\n\n// Zoom in\nconst zoomIn = () => {\n    calendarRef.current?.zoom({ scale: 1.5 });\n};\n\n// Zoom out\nconst zoomOut = () => {\n    calendarRef.current?.zoom({ scale: 0.75 });\n};\n\n// Set a specific time interval height\nconst setSpecificZoom = () => {\n    calendarRef.current?.zoom({ height: 90 });\n};\n\nreturn (\n    <>\n    <CalendarKit\n        ref={calendarRef}\n        allowPinchToZoom={true}\n        // ... other props\n    />\n    <Button title="Zoom In" onPress={zoomIn} />\n    <Button title="Zoom Out" onPress={zoomOut} />\n    <Button title="Set Specific Zoom" onPress={setSpecificZoom} />\n    </>\n);\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9296:(e,n,t)=>{var i=t(9856),o=Symbol.for("react.element"),r=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,l=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var i,r={},c=null,h=null;for(i in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(h=n.ref),n)a.call(n,i)&&!s.hasOwnProperty(i)&&(r[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===r[i]&&(r[i]=n[i]);return{$$typeof:o,type:e,key:c,ref:h,props:r,_owner:l.current}}n.Fragment=r,n.jsx=c,n.jsxs=c},412:(e,n,t)=>{e.exports=t(9296)},6823:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(9856);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);