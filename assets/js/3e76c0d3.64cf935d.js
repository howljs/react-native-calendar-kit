/*! For license information please see 3e76c0d3.64cf935d.js.LICENSE.txt */
"use strict";(self.webpackChunkcalendar_kit_docs=self.webpackChunkcalendar_kit_docs||[]).push([[366],{2544:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>s});var t=r(412),a=r(6823);const o={sidebar_position:3},i="Drag to Create Events",d={id:"guides/drag-to-create",title:"Drag to Create Events",description:"The React Native Calendar Kit provides a powerful drag-and-drop feature to create new events directly on the calendar interface. This guide will walk you through enabling this feature and customizing its behavior.",source:"@site/docs/guides/drag-to-create.md",sourceDirName:"guides",slug:"/guides/drag-to-create",permalink:"/react-native-calendar-kit/docs/guides/drag-to-create",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Working with Events",permalink:"/react-native-calendar-kit/docs/guides/events"},next:{title:"Drag to Edit Events",permalink:"/react-native-calendar-kit/docs/guides/drag-to-edit"}},l={},s=[{value:"Enabling Drag-to-Create",id:"enabling-drag-to-create",level:2},{value:"Handling Event Creation",id:"handling-event-creation",level:2},{value:"Customizing Drag-to-Create Behavior",id:"customizing-drag-to-create-behavior",level:2},{value:"Default Duration",id:"default-duration",level:3},{value:"Drag Step",id:"drag-step",level:3},{value:"Customizing the Dragging Indicator",id:"customizing-the-dragging-indicator",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"drag-to-create-events",children:"Drag to Create Events"})}),"\n",(0,t.jsx)(n.p,{children:"The React Native Calendar Kit provides a powerful drag-and-drop feature to create new events directly on the calendar interface. This guide will walk you through enabling this feature and customizing its behavior."}),"\n",(0,t.jsx)(n.h2,{id:"enabling-drag-to-create",children:"Enabling Drag-to-Create"}),"\n",(0,t.jsxs)(n.p,{children:["To enable the drag-to-create feature, you need to set the ",(0,t.jsx)(n.code,{children:"allowDragToCreate"})," prop to ",(0,t.jsx)(n.code,{children:"true"})," on the ",(0,t.jsx)(n.code,{children:"CalendarContainer"})," component:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import {\n  CalendarContainer,\n  CalendarHeader,\n  CalendarBody,\n} from "@howljs/calendar-kit";\nconst MyCalendar = () => {\n  return (\n    <CalendarContainer\n      allowDragToCreate={true}\n      // ... other props\n    >\n      <CalendarHeader />\n      <CalendarBody />\n    </CalendarContainer>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"handling-event-creation",children:"Handling Event Creation"}),"\n",(0,t.jsx)(n.p,{children:"When a user drags to create a new event, you need to handle the creation process. This is done using two callback props:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onDragCreateEventStart"}),": Called when the user starts dragging to create an event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onDragCreateEventEnd"}),": Called when the user releases the drag, finalizing the event creation."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here's an example of how to implement these callbacks:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'const MyCalendar = () => {\n  const handleDragCreateStart = (start) => {\n    console.log("Started creating event at:", start);\n    // You can use this to show a UI indicator that event creation has started\n  };\n\n  const handleDragCreateEnd = (event) => {\n    console.log("New event:", event);\n    // Here you would typically add the new event to your events array\n    // and possibly open a modal for the user to add more details\n  };\n\n  return (\n    <CalendarContainer\n      allowDragToCreate={true}\n      onDragCreateEventStart={handleDragCreateStart}\n      onDragCreateEventEnd={handleDragCreateEnd}\n      // ... other props\n    >\n      <CalendarHeader />\n      <CalendarBody />\n    </CalendarContainer>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"customizing-drag-to-create-behavior",children:"Customizing Drag-to-Create Behavior"}),"\n",(0,t.jsx)(n.p,{children:"You can customize various aspects of the drag-to-create feature:"}),"\n",(0,t.jsx)(n.h3,{id:"default-duration",children:"Default Duration"}),"\n",(0,t.jsxs)(n.p,{children:["Set the ",(0,t.jsx)(n.code,{children:"defaultDuration"})," prop (in minutes) to control the initial duration of newly created events:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<CalendarContainer\n  allowDragToCreate={true}\n  defaultDuration={60} // New events will be 1 hour long by default\n  // ... other props\n>\n  {/* ... */}\n</CalendarContainer>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"drag-step",children:"Drag Step"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"dragStep"})," prop determines the time increments (in minutes) for dragging:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<CalendarContainer\n  allowDragToCreate={true}\n  dragStep={15} // Drag will snap to 15-minute increments\n  // ... other props\n>\n  {/* ... */}\n</CalendarContainer>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"customizing-the-dragging-indicator",children:"Customizing the Dragging Indicator"}),"\n",(0,t.jsx)(n.p,{children:"You can customize the appearance of the dragging indicator by providing a custom renderer:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import React, { useCallback } from 'react';\nimport {\n  CalendarBody,\n  CalendarContainer,\n  CalendarHeader,\n  DraggingEvent,\n  DraggingEventProps\n} from '@howljs/calendar-kit';\n\nconst renderDraggingEvent = useCallback((props: DraggingEventProps) => {\n  return (\n    <DraggingEvent\n        {...props}\n        TopEdgeComponent={\n          <View\n            style={{\n              height: 10,\n              width: '100%',\n              backgroundColor: 'red',\n              position: 'absolute',\n            }}\n          />\n        }\n        BottomEdgeComponent={\n          <View\n            style={{\n              height: 10,\n              width: '100%',\n              backgroundColor: 'red',\n              bottom: 0,\n              position: 'absolute',\n            }}\n          />\n        }\n      />\n  );\n}, []);\n\n<CalendarContainer\n  allowDragToCreate={true}\n  // ... other props\n>\n  <CalendarHeader />\n  <CalendarBody renderDraggingEvent={renderDraggingEvent} />\n</CalendarContainer>\n"})})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},9296:(e,n,r)=>{var t=r(9856),a=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,d=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function s(e,n,r){var t,o={},s=null,c=null;for(t in void 0!==r&&(s=""+r),void 0!==n.key&&(s=""+n.key),void 0!==n.ref&&(c=n.ref),n)i.call(n,t)&&!l.hasOwnProperty(t)&&(o[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:a,type:e,key:s,ref:c,props:o,_owner:d.current}}n.Fragment=o,n.jsx=s,n.jsxs=s},412:(e,n,r)=>{e.exports=r(9296)},6823:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var t=r(9856);const a={},o=t.createContext(a);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);