/*! For license information please see d63f6fbe.61fa62c8.js.LICENSE.txt */
"use strict";(self.webpackChunkcalendar_kit_docs=self.webpackChunkcalendar_kit_docs||[]).push([[9085],{7098:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=r(412),s=r(6823);const i={sidebar_position:2},d="Working with Events",l={id:"guides/events",title:"Working with Events",description:"React Native Calendar Kit provides powerful features for handling events in your calendar. This guide will walk you through how to add, customize, and interact with events.",source:"@site/docs/guides/events.md",sourceDirName:"guides",slug:"/guides/events",permalink:"/react-native-calendar-kit/docs/guides/events",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"View Mode",permalink:"/react-native-calendar-kit/docs/guides/view-mode"},next:{title:"Drag to Create Events",permalink:"/react-native-calendar-kit/docs/guides/drag-to-create"}},a={},c=[{value:"Adding Events",id:"adding-events",level:2},{value:"Customizing Event Rendering",id:"customizing-event-rendering",level:2},{value:"Handling Event Interactions",id:"handling-event-interactions",level:2},{value:"onPressEvent",id:"onpressevent",level:3},{value:"onLongPressEvent",id:"onlongpressevent",level:3},{value:"All-Day Events",id:"all-day-events",level:2},{value:"Recurring Events",id:"recurring-events",level:2},{value:"Regular Recurring Events",id:"regular-recurring-events",level:3},{value:"More Examples of Recurring Events",id:"more-examples-of-recurring-events",level:3},{value:"Recurring All-Day Events",id:"recurring-all-day-events",level:3},{value:"Excluding Dates from Recurring Events",id:"excluding-dates-from-recurring-events",level:2},{value:"Using excludeDates",id:"using-excludedates",level:3},{value:"For Regular Recurring Events",id:"for-regular-recurring-events",level:4},{value:"For Timezone-independent All-Day Events",id:"for-timezone-independent-all-day-events",level:4},{value:"Format for excludeDates",id:"format-for-excludedates",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"working-with-events",children:"Working with Events"})}),"\n",(0,t.jsx)(n.p,{children:"React Native Calendar Kit provides powerful features for handling events in your calendar. This guide will walk you through how to add, customize, and interact with events."}),"\n",(0,t.jsx)(n.h2,{id:"adding-events",children:"Adding Events"}),"\n",(0,t.jsxs)(n.p,{children:["To add events to your calendar, use the ",(0,t.jsx)(n.code,{children:"events"})," prop. This prop accepts an array of event objects:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<CalendarContainer\n    events={[\n    {\n        id: '1',\n        title: 'Meeting with Team',\n        start: { dateTime: '2024-03-15T10:00:00Z' },\n        end: { dateTime: '2024-03-15T11:00:00Z' },\n        color: '#4285F4',\n    },\n    // ... more events\n    ]}\n    // ... other props\n>\n    <CalendarHeader />\n    <CalendarBody />\n</CalendarContainer>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Each event object should have the following properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"})," (string): A unique identifier for the event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"title"})," (string): The title of the event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"start"})," (object): The start time of the event.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"date"})," (string): YYYY-MM-DD"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dateTime"})," (string): ISO 8601 formatted date-time string."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeZone"})," (string): IANA time zone string."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"end"})," (object): The end time of the event.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"date"})," (string): YYYY-MM-DD"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dateTime"})," (string): ISO 8601 formatted date-time string."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeZone"})," (string): IANA time zone string."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"color"})," (string, optional): The color of the event (CSS color string)."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"customizing-event-rendering",children:"Customizing Event Rendering"}),"\n",(0,t.jsxs)(n.p,{children:["You can customize how events are rendered using the ",(0,t.jsx)(n.code,{children:"renderEvent"})," prop:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const renderEvent = useCallback(\n    (event: PackedEvent) => (\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          padding: 4,\n        }}>\n        <Ionicons name=\"calendar\" size={10} color=\"white\" />\n        <Text style={{ color: 'white', fontSize: 10 }}>{event.title}</Text>\n      </View>\n    ),\n    []\n  );\n\n/*...*/\n<CalendarBody renderEvent={renderEvent} />\n/*...*/\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"renderEvent"})," function receives the event object and an object containing ",(0,t.jsx)(n.code,{children:"width"})," and ",(0,t.jsx)(n.code,{children:"height"})," shared values. These can be used with Reanimated to create dynamic layouts."]}),"\n",(0,t.jsx)(n.h2,{id:"handling-event-interactions",children:"Handling Event Interactions"}),"\n",(0,t.jsx)(n.p,{children:"React Native Calendar Kit provides several props for handling event interactions:"}),"\n",(0,t.jsx)(n.h3,{id:"onpressevent",children:"onPressEvent"}),"\n",(0,t.jsx)(n.p,{children:"Triggered when an event is pressed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<CalendarContainer\n    events={events}\n    onPressEvent={(event) => {\n        console.log('Event pressed:', event);\n    }}\n    // ... other props\n>\n    {/* ... */}\n</CalendarContainer>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"onlongpressevent",children:"onLongPressEvent"}),"\n",(0,t.jsx)(n.p,{children:"Triggered when an event is long-pressed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"<CalendarKit\n    events={events}\n    onLongPressEvent={(event) => {\n        console.log('Event long-pressed:', event);\n    }}\n    // ... other props\n/>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"all-day-events",children:"All-Day Events"}),"\n",(0,t.jsx)(n.p,{children:"There are two ways to create all-day events:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Timezone-dependent all-day events:\nSet the ",(0,t.jsx)(n.code,{children:"start"})," and ",(0,t.jsx)(n.code,{children:"end"})," times to cover the entire day:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '2',\n  title: 'Conference',\n  start: { dateTime: '2024-03-17T00:00:00', timeZone: 'America/New_York' },\n  end: { dateTime: '2024-03-18T00:00:00', timeZone: 'America/New_York' },\n  color: '#34A853',\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Timezone-independent all-day events:\nOmit the ",(0,t.jsx)(n.code,{children:"dateTime"})," and ",(0,t.jsx)(n.code,{children:"timeZone"})," properties, and instead use ",(0,t.jsx)(n.code,{children:"date"})," for both ",(0,t.jsx)(n.code,{children:"start"})," and ",(0,t.jsx)(n.code,{children:"end"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '3',\n  title: 'Company Holiday',\n  start: { date: '2024-03-17' },\n  end: { date: '2024-03-17' },\n  color: '#FBBC05',\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"For multi-day events, you can specify different start and end dates:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '4',\n  title: 'Annual Leave',\n  start: { date: '2024-03-18' },\n  end: { date: '2024-03-22' },\n  color: '#EA4335',\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When you use the ",(0,t.jsx)(n.code,{children:"date"})," property without ",(0,t.jsx)(n.code,{children:"dateTime"})," and ",(0,t.jsx)(n.code,{children:"timeZone"}),", these events will be treated as all-day events that are not dependent on any specific timezone. This is particularly useful for events like holidays or multi-day events that span entire days regardless of the user's local time."]}),"\n",(0,t.jsx)(n.h2,{id:"recurring-events",children:"Recurring Events"}),"\n",(0,t.jsxs)(n.p,{children:["React Native Calendar Kit supports recurring events using the RRule standard. Add a ",(0,t.jsx)(n.code,{children:"recurrenceRule"})," property to your event object:"]}),"\n",(0,t.jsx)(n.h3,{id:"regular-recurring-events",children:"Regular Recurring Events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '3',\n  title: 'Weekly Team Sync',\n  start: { dateTime: '2024-03-18T15:00:00Z' },\n  end: { dateTime: '2024-03-18T16:00:00Z' },\n  color: '#FBBC05',\n  recurrenceRule: 'RRULE:FREQ=WEEKLY;BYDAY=MO'\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This creates a weekly recurring event every Monday."}),"\n",(0,t.jsx)(n.h3,{id:"more-examples-of-recurring-events",children:"More Examples of Recurring Events"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Daily event:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '4',\n  title: 'Daily Standup',\n  start: { dateTime: '2024-03-18T09:00:00Z' },\n  end: { dateTime: '2024-03-18T09:15:00Z' },\n  color: '#4285F4',\n  recurrenceRule: 'RRULE:FREQ=DAILY'\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Monthly event on the first Monday:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '5',\n  title: 'Monthly Review',\n  start: { dateTime: '2024-04-01T14:00:00Z' },\n  end: { dateTime: '2024-04-01T15:00:00Z' },\n  color: '#34A853',\n  recurrenceRule: 'RRULE:FREQ=MONTHLY;BYDAY=1MO'\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Yearly event:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '6',\n  title: 'Annual Company Picnic',\n  start: { dateTime: '2024-07-15T11:00:00Z' },\n  end: { dateTime: '2024-07-15T16:00:00Z' },\n  color: '#EA4335',\n  recurrenceRule: 'RRULE:FREQ=YEARLY'\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"recurring-all-day-events",children:"Recurring All-Day Events"}),"\n",(0,t.jsx)(n.p,{children:"You can also create recurring all-day events. Here are some examples:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Weekly all-day event (every Friday):"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '7',\n  title: 'Weekly Team Building Day',\n  start: { date: '2024-03-22' },\n  end: { date: '2024-03-22' },\n  color: '#FBBC05',\n  recurrenceRule: 'RRULE:FREQ=WEEKLY;BYDAY=FR'\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Monthly all-day event (first day of every month):"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '8',\n  title: 'Monthly Planning Day',\n  start: { date: '2024-04-01' },\n  end: { date: '2024-04-01' },\n  color: '#34A853',\n  recurrenceRule: 'RRULE:FREQ=MONTHLY;BYMONTHDAY=1'\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Yearly all-day event (every December 25th):"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '9',\n  title: 'Company Holiday',\n  start: { date: '2024-12-25' },\n  end: { date: '2024-12-25' },\n  color: '#EA4335',\n  recurrenceRule: 'RRULE:FREQ=YEARLY;BYMONTH=12;BYMONTHDAY=25'\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["These examples demonstrate how to create various types of recurring events, including regular timed events and all-day events. The ",(0,t.jsx)(n.code,{children:"recurrenceRule"})," follows the iCalendar RFC 5545 standard, allowing for complex recurrence patterns."]}),"\n",(0,t.jsxs)(n.p,{children:["Remember, when using recurring all-day events, use the ",(0,t.jsx)(n.code,{children:"date"})," property in the ",(0,t.jsx)(n.code,{children:"start"})," and ",(0,t.jsx)(n.code,{children:"end"})," objects instead of ",(0,t.jsx)(n.code,{children:"dateTime"})," and ",(0,t.jsx)(n.code,{children:"timeZone"}),". This ensures that the events are treated as timezone-independent all-day events."]}),"\n",(0,t.jsx)(n.h2,{id:"excluding-dates-from-recurring-events",children:"Excluding Dates from Recurring Events"}),"\n",(0,t.jsxs)(n.p,{children:["When working with recurring events, you might want to exclude specific dates from the recurrence pattern. React Native Calendar Kit provides the ",(0,t.jsx)(n.code,{children:"excludeDates"})," property for this purpose."]}),"\n",(0,t.jsx)(n.h3,{id:"using-excludedates",children:"Using excludeDates"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"excludeDates"})," property allows you to specify dates that should be skipped in a recurring event series. This is useful for handling exceptions to regular patterns, such as holidays or canceled meetings."]}),"\n",(0,t.jsx)(n.h4,{id:"for-regular-recurring-events",children:"For Regular Recurring Events"}),"\n",(0,t.jsxs)(n.p,{children:["For regular recurring events (with ",(0,t.jsx)(n.code,{children:"dateTime"})," and ",(0,t.jsx)(n.code,{children:"timeZone"}),"), ",(0,t.jsx)(n.code,{children:"excludeDates"})," should be an array of ISO 8601 formatted date-time strings:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '10',\n  title: 'Weekly Team Meeting',\n  start: { dateTime: '2024-03-18T10:00:00Z' },\n  end: { dateTime: '2024-03-18T11:00:00Z' },\n  color: '#4285F4',\n  recurrenceRule: 'RRULE:FREQ=WEEKLY;BYDAY=MO',\n  excludeDates: ['2024-03-25T10:00:00Z', '2024-04-01T10:00:00Z', '2024-05-27T10:00:00Z']\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"In this example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The event is set to recur every Monday."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"excludeDates"})," array specifies three dates with times in UTC."]}),"\n",(0,t.jsx)(n.li,{children:"The event will not appear on these excluded dates and times."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"for-timezone-independent-all-day-events",children:"For Timezone-independent All-Day Events"}),"\n",(0,t.jsxs)(n.p,{children:["For all-day events (using ",(0,t.jsx)(n.code,{children:"date"})," instead of ",(0,t.jsx)(n.code,{children:"dateTime"}),"), ",(0,t.jsx)(n.code,{children:"excludeDates"})," should be an array of 'YYYY-MM-DD' formatted strings:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '11',\n  title: 'Monthly Team Building Day',\n  start: { date: '2024-03-01' },\n  end: { date: '2024-03-01' },\n  color: '#34A853',\n  recurrenceRule: 'RRULE:FREQ=MONTHLY;BYDAY=1FR',\n  excludeDates: ['2024-07-05', '2024-08-02', '2024-12-06']\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"In this example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The event is set to recur on the first Friday of every month."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"excludeDates"})," array specifies three dates without times."]}),"\n",(0,t.jsx)(n.li,{children:"The event will not appear on these excluded dates."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"format-for-excludedates",children:"Format for excludeDates"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For regular events: ISO 8601 formatted date-time strings (e.g., '2024-03-25T10:00:00Z')"}),"\n",(0,t.jsx)(n.li,{children:"For all-day events: 'YYYY-MM-DD' formatted strings (e.g., '2024-03-25')"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},9296:(e,n,r)=>{var t=r(9856),s=Symbol.for("react.element"),i=Symbol.for("react.fragment"),d=Object.prototype.hasOwnProperty,l=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,r){var t,i={},c=null,o=null;for(t in void 0!==r&&(c=""+r),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(o=n.ref),n)d.call(n,t)&&!a.hasOwnProperty(t)&&(i[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===i[t]&&(i[t]=n[t]);return{$$typeof:s,type:e,key:c,ref:o,props:i,_owner:l.current}}n.Fragment=i,n.jsx=c,n.jsxs=c},412:(e,n,r)=>{e.exports=r(9296)},6823:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var t=r(9856);const s={},i=t.createContext(s);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);