/*! For license information please see 6ee977c8.108264e5.js.LICENSE.txt */
"use strict";(self.webpackChunkcalendar_kit_docs=self.webpackChunkcalendar_kit_docs||[]).push([[389],{3558:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=r(412),t=r(6823);const o={sidebar_position:11},a="Resources Calendar",i={id:"guides/resources",title:"Resources Calendar",description:"resources",source:"@site/docs/guides/resources.md",sourceDirName:"guides",slug:"/guides/resources",permalink:"/react-native-calendar-kit/docs/guides/resources",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Theme",permalink:"/react-native-calendar-kit/docs/guides/theme"},next:{title:"CalendarBody",permalink:"/react-native-calendar-kit/docs/customization/CalendarBody"}},c={},d=[{value:"Setting Up Resources Calendar",id:"setting-up-resources-calendar",level:2},{value:"Adding Events with Resources",id:"adding-events-with-resources",level:2},{value:"Customizing Resources Header",id:"customizing-resources-header",level:2},{value:"Handling Resource-specific Actions",id:"handling-resource-specific-actions",level:2},{value:"Limitations and Considerations",id:"limitations-and-considerations",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"resources-calendar",children:"Resources Calendar"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"resources",src:r(5074).A+"",width:"658",height:"818"})}),"\n",(0,s.jsx)(n.p,{children:"The Resources Calendar feature allows you to display events for multiple resources (e.g., rooms, employees, equipment) side by side in a single calendar view. This is particularly useful for scheduling and managing multiple resources simultaneously."}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-resources-calendar",children:"Setting Up Resources Calendar"}),"\n",(0,s.jsxs)(n.p,{children:["To use the Resources Calendar feature, you need to provide a ",(0,s.jsx)(n.code,{children:"resources"})," prop to the ",(0,s.jsx)(n.code,{children:"CalendarContainer"})," component. Each resource should have a unique ",(0,s.jsx)(n.code,{children:"id"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import {\n  CalendarContainer,\n  CalendarHeader,\n  CalendarBody,\n} from \"@howljs/calendar-kit\";\n\nconst resources = [\n    { id: 'room1', name: 'Meeting Room 1' },\n    { id: 'room2', name: 'Meeting Room 2' },\n    { id: 'room3', name: 'Conference Room' },\n];\n\nfunction MyCalendar() {\n    return (\n    <CalendarContainer\n        resources={resources}\n        // ... other props\n    >\n        <CalendarHeader />\n        <CalendarBody />\n    </CalendarContainer>\n    );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"adding-events-with-resources",children:"Adding Events with Resources"}),"\n",(0,s.jsxs)(n.p,{children:["When adding events to your calendar, you need to specify the ",(0,s.jsx)(n.code,{children:"resourceId"})," for each event. This associates the event with a particular resource."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const events = [\n      {\n        id: '1',\n        title: 'Team Meeting',\n        start: { dateTime: '2024-03-15T10:00:00Z' },\n        end: { dateTime: '2024-03-15T11:00:00Z' },\n        resourceId: 'room1',\n      },\n      {\n        id: '2',\n        title: 'Client Presentation',\n        start: { dateTime: '2024-03-15T14:00:00Z' },\n        end: { dateTime: '2024-03-15T15:30:00Z' },\n        resourceId: 'room2',\n      },\n      // ... more events\n    ];\n"})}),"\n",(0,s.jsx)(n.h2,{id:"customizing-resources-header",children:"Customizing Resources Header"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize the appearance of the resources header by providing a ",(0,s.jsx)(n.code,{children:"renderHeaderItem"})," prop to the ",(0,s.jsx)(n.code,{children:"CalendarHeader"})," component."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function MyCalendar() {\nconst _renderResource = useCallback((resource: ResourceItem) => {\n    return (\n      <View style={styles.resourceContainer}>\n        <Ionicons name=\"person-circle-outline\" size={24} color=\"black\" />\n        <Text>{resource.title}</Text>\n      </View>\n    );\n  }, []);\n\n  const _renderResourceHeaderItem = useCallback(\n    (item: HeaderItemProps) => {\n      const start = parseDateTime(item.startUnix);\n      const dateStr = start.toFormat('yyyy-MM-dd');\n\n      return (\n        <ResourceHeaderItem\n          startUnix={item.startUnix}\n          resources={item.extra.resources}\n          renderResource={_renderResource}\n          DateComponent={\n            <View style={styles.dateContainer}>\n              <Text style={{ fontSize: 16, fontWeight: 'bold' }}>\n                {dateStr}\n              </Text>\n            </View>\n          }\n        />\n      );\n    },\n    [_renderResource]\n  );\n\n  return (\n    <CalendarContainer\n      resources={resources}\n      events={events}\n      // ... other props\n    >\n      <CalendarHeader renderHeaderItem={_renderResourceHeaderItem}/>\n      <CalendarBody  />\n    </CalendarContainer>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Check example code: ",(0,s.jsx)(n.a,{href:"https://github.com/howljs/react-native-calendar-kit/blob/main/apps/example/app/(drawer)/index.tsx",children:"https://github.com/howljs/react-native-calendar-kit/blob/main/apps/example/app/(drawer)/index.tsx"})]}),"\n",(0,s.jsx)(n.h2,{id:"handling-resource-specific-actions",children:"Handling Resource-specific Actions"}),"\n",(0,s.jsx)(n.p,{children:"When handling events in a Resources Calendar, you may need to consider the associated resource. For example, when creating a new event:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function MyCalendar() {\n    const handleCreateEvent = (event) => {\n    // event.resourceId will contain the id of the resource where the event was created\n    console.log('New event for resource:', event.resourceId);\n    // Add your logic to create the event\n    };\n\n    return (\n        <CalendarKit\n            resources={resources}\n            onPressBackground={handleCreateEvent}\n            // ... other props\n        />\n    );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"limitations-and-considerations",children:"Limitations and Considerations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"When using resources, the calendar will automatically switch to a single-day view."}),"\n",(0,s.jsx)(n.li,{children:"All-day events are not supported in resources view."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9296:(e,n,r)=>{var s=r(9856),t=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,r){var s,o={},d=null,l=null;for(s in void 0!==r&&(d=""+r),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(l=n.ref),n)a.call(n,s)&&!c.hasOwnProperty(s)&&(o[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===o[s]&&(o[s]=n[s]);return{$$typeof:t,type:e,key:d,ref:l,props:o,_owner:i.current}}n.Fragment=o,n.jsx=d,n.jsxs=d},412:(e,n,r)=>{e.exports=r(9296)},5074:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/resources-25f0bc8e73523fb011b351a457c3c01a.png"},6823:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var s=r(9856);const t={},o=s.createContext(t);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);